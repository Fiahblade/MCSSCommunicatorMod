buildscript {
    repositories {
        jcenter()  
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'    
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.0"
group = "com.mcserversoft.mcsscommunicatormod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcsscommunicatormod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    //srgExtra "PK: org/ejml your/new/package/here/ejml"
    //srgExtra "PK: org/ejml/alg your/new/package/here/ejml/alg"
    /*  
    srgExtra "PK: org/httpcore org.apache.http.HttpResponse"
    srgExtra "PK: org/httpclient org.apache.http.client.HttpClient"
    srgExtra "PK: org/httpclient org.apache.http.client.methods.HttpPost"
    srgExtra "PK: org/httpcore org.apache.http.entity.StringEntity"
    srgExtra "PK: org/httpcore org.apache.http.impl.client.DefaultHttpClient"*/
    
    /* srgExtra "PK: org/apache/http/http/httpresponse com/mcserversoft/mcsscommunicatormod/org/apache/http/httpresponse"
    srgExtra "PK: org/apache/http/client/httpclient com/mcserversoft/mcsscommunicatormod/org/apache/http/client/httpclient"
    srgExtra "PK: org/apache/http/client/methods/httppost com/mcserversoft/mcsscommunicatormod/org/apache/http/client/methods/httppost"
    srgExtra "PK: org/apache/http/entity/stringentity com/mcserversoft/mcsscommunicatormod/org/apache/http/client/stringentity"
    srgExtra "PK: org/apache/http/impl/client/defaulthttpclient com/mcserversoft/mcsscommunicatormod/org/apache/http/impl/client/defaulthttpclient"*/
    
    /* "PK: org/apache/http/http/httpresponse com/mcserversoft/mcsscommunicatormod/org/apache/http/httpresponse"
    "PK: org/apache/http/client/httpclient com/mcserversoft/mcsscommunicatormod/org/apache/http/client/httpclient"
    "PK: org/apache/http/client/methods/httppost com/mcserversoft/mcsscommunicatormod/org/apache/http/client/methods/httppost"
    "PK: org/apache/http/entity/stringentity com/mcserversoft/mcsscommunicatormod/org/apache/http/client/stringentity"
    "PK: org/apache/http/impl/client/defaulthttpclient com/mcserversoft/mcsscommunicatormod/org/apache/http/impl/client/defaulthttpclient"*/
    
    //"PK: org/apache/http/ com/mcserversoft/mcsscommunicatormod/org/apache/http"
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    shade "com.squareup.okhttp3:okhttp:4.0.1"
    
     
    /* shade 'org.apache.httpcomponents:httpcore:4.4.11'
    shade 'org.apache.httpcomponents:httpclient:4.5.9'
    shade 'commons-logging:commons-logging:1.2'*/
    
    
    /*
    compile 'org.apache.httpcomponents:httpcore:4.3.2'
    compile 'org.apache.httpcomponents:httpclient:4.3.3'*/
    
    /* compile files('lib/httpcore-4.4.11.jar')
    compile files('lib/httpclient-4.5.9.jar')*/
    
    
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env


    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

reobf {
    jar {
        /* extraLines "PK: org/apache/commons com/mcserversoft/mcsscommunicatormod/org/apache/commons"
        extraLines "PK: org/apache/http com/mcserversoft/mcsscommunicatormod/org/apache/http"*/
        extraLines "PK: com.squareup.okhttp3 com/mcserversoft/mcsscommunicatormod/com/squareup/okhttp3"
    }
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
  /*
    manifest{
        attributes 'TweakClass': 'com.mcserversoft.mcsscommunicatormod.com.squareup.okhttp3'
    }*/
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}